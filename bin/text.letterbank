#!/usr/bin/env python3

help = '''Construct words using the letters given.
Uppercase letters are required.
Lowercase letters are allowed.
Other letters are forbidden.

Usage: letterbank abcDEF

'''

import collections
import functools


def bitHash(s):
    # s = s.upper()
    a = 0
    for c in s:
        n = ord(c)-65
        if n < 0:
            continue
        a |= 1 << n
    return a

def Letterbank(word):
    '''
    >>> Letterbank('ratesz')
    ['ERSATZ', 'ERSATZES']
    '''
    letters = word.upper()
    value = bitHash(letters)

    l = len(letters)+1  # To avoid stripping of the '\n' before comparing

    # wordlist = open("/usr/local/share/dict/OWL14.txt", 'r').readlines()
    wordlist = open("/usr/share/dict/words", 'r').readlines()
    results = []
    for line in wordlist:
        line = line.rstrip()
        lineValue = bitHash(line)
        if value == lineValue:
            results.append(line) 
    return results

def is_letterbank(required, optional):
    req_hash = bitHash(required)
    opt_hash = bitHash(optional) | req_hash
    req_count = collections.Counter(required)
    def functest(word):
        word_hash = bitHash(word)
        if word_hash & req_hash != req_hash:
            return False
        if word_hash | opt_hash != opt_hash:
            return False
        word_count = collections.Counter(word)
        for letter in req_count:
            if req_count[letter] > word_count[letter]:
                return False
        return True
    return functest

def main(query):
    required = [ch for ch in query if ch.isupper()]
    optional = [ch.upper() for ch in query if ch.islower()]
    word_test = is_letterbank(required, optional)
    # with open("/usr/local/share/dict/OWL14.txt",'r') as infile:
    with open("/usr/share/dict/words", 'r') as infile:
        result = []
        for line in infile:
            word = line.rstrip().upper()
            if word_test(word):
                result.append(word)
    return result


if __name__ == '__main__':
    import sys
    import fileinput

    try:
        for line in fileinput.input(sys.argv[1:]):
            print(' '.join(main(line)))
    except IOError:
        print(' '.join(main(sys.argv[1])))
